name: Linting

on:
  push:
    branches:
      - master
  pull_request:
    # default (from docs) is just on [opened, synchronize, reopened]
    types: [opened, reopened, ready_for_review, edited]
    branches:
      - master

# Note: only running this on Ubuntu (latest) and Python 3.8 as representative,
# since the linting output should be machine dependent and not vary much if
# at all by Python minor version.

jobs:
  # Note: ensure the configuration for each linter used (i.e. each job)
  # corresponds to that configured by the .pre-commit-config.yaml else
  # we will be linting on different requirements pre- and post- commit!

  # Lint with black (see https://black.readthedocs.io/en/stable/index.html)
  # where the black config. in pyproject.toml should be detected and applied on
  # the black command used to lint the codebase.
  # *Keep the config. here the same as that in the pyproject.toml file*
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: psf/black@stable

  # Lint against selected pre-commit hooks (see https://pre-commit.com
  # and https://github.com/pre-commit/action).
  # *Keep the config. here the same as that in the .pre-commit-config.yaml*
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - uses: pre-commit/action@v2.0.0

  # Lint with flake8 (see https://github.com/suo/flake8-github-action)
  # *Keep the config. here the same as that in the .flake8 file*
  flake8:
    runs-on: ubuntu-latest
    steps:
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Checkout PyTorch
        uses: actions/checkout@master
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:  # A token is required but GitHub manages it all automatically
          checkName: 'flake8'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  # TODO: docstyle linting (both pydocstyle and docformatter
  # if possible, if not one or something similar).
