# Configure pre-commit hooks to check for Python code validity, formatting and
# style issues and prompt for these to be corrected before committing.

repos:

  # Use specific format-enforcing pre-commit hooks from the core library
  # with the default configuration (see pre-commit.com for documentation)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.4.0
    hooks:
      - id: check-ast
      - id: debug-statements
      - id: end-of-file-fixer
        types: [python]
      - id: trailing-whitespace
        types: [python]

  # Also validate against 'black' for unambiguous Python formatting
  # (see https://black.readthedocs.io/en/stable/ for documentation and see
  # the cfunits pyproject.toml file for our custom black configuration)
  - repo: https://github.com/ambv/black
    rev: stable
    hooks:
      - id: black
        language_version: python3.6

  # Also format docstrings in a consistent way, on top of 'black' requirements
  # (see https://github.com/myint/docformatter for docs, with config as below)
  - repo: https://github.com/myint/docformatter
    rev: v1.4
    hooks:
      - id: docformatter
        # These arguments act as the configuration for docformatter. They:
        # * make docformatter auto-format in-place if not compliant;
        # * for multi-liners ensure summary begins on line after open quotes;
        # * ensure there is a blank line after the final non-empty line;
        # * wraps both summary and description at 72 characters (the latter
        #   by default).
        args: [--in-place, --pre-summary-newline, --blank, --wrap-summaries=72]

  # Check the docstrings for other various issues and bad practice using
  # 'pydocstyle' (see http://www.pydocstyle.org/en/stable/index.html for
  # docs and see the cfunits .pydocstyle.ini file for our custom configuration)
  - repo: https://github.com/pycqa/pydocstyle
    rev: 5.1.1
    hooks:
      - id: pydocstyle

  # Additionally validate againt flake8 for other Python style enforcement
  # (see https://flake8.pycqa.org/en/latest/ for documentation and see
  # the cfunits .flake8 file for our custom flake8 configuration)
  - repo: https://gitlab.com/pycqa/flake8
    rev: 3.8.3
    hooks:
      - id: flake8
